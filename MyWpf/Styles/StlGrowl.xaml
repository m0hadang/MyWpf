<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:vc="clr-namespace:Notification.ValueConverter"
                    xmlns:uicon="clr-namespace:Notification.UIControl"
                    xmlns:growl="clr-namespace:Notification.Src">
    <vc:Boolean2VisibilityConverter x:Key="Boolean2VisibilityConverter"/>
    <FontFamily x:Key="SpoqaHansMediumFont">pack://application:,,,/;component/Resource/Fonts/SpoqaHanSansNeo-Medium.ttf#Spoqa Han Sans Neo Medium</FontFamily>
    <FontFamily x:Key="SpoqaHansRegularFont">pack://application:,,,/;component/Resource/Fonts/SpoqaHanSansNeo-Regular.ttf#Spoqa Han Sans Neo Regular</FontFamily>

    <ImageSource x:Key="WarningImg">pack://application:,,,/;component/Resource/Image/warning.png</ImageSource>
    <ImageSource x:Key="CheckImg">pack://application:,,,/;component/Resource/Image/check.png</ImageSource>
    
    <Color x:Key="EffectShadowColor">#AA000000</Color>
    <DropShadowEffect x:Key="EffectShadow2" BlurRadius="8" ShadowDepth="0.8" Direction="270" 
                      Color="{StaticResource EffectShadowColor}" Opacity="0.08" RenderingBias="Performance" o:Freeze="True" />

    <Style x:Key="TextBlockBaseStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="TextBlockDefault" BasedOn="{StaticResource TextBlockBaseStyle}" TargetType="TextBlock"/>

    <Geometry o:Freeze="True" x:Key="ErrorGeometry">M495.469714 0C224.621714 0 0 224.621714 0 495.469714c0 270.884571 224.621714 495.506286 495.469714 495.506286 270.884571 0 495.506286-224.621714 495.506286-495.506286C990.976 224.621714 766.354286 0 495.469714 0z m211.419429 634.221714c19.821714 19.821714 19.821714 46.226286 0 66.048s-46.226286 19.821714-66.048 0l-138.752-138.715428-145.334857 145.334857a51.858286 51.858286 0 0 1-72.667429 0 51.858286 51.858286 0 0 1 0-72.667429l145.334857-145.334857-138.752-138.752c-19.821714-19.821714-19.821714-46.226286 0-66.048s46.262857-19.821714 66.084572 0l138.715428 138.715429 145.371429-145.334857a51.858286 51.858286 0 0 1 72.667428 0 51.858286 51.858286 0 0 1 0 72.667428l-145.371428 145.334857 138.752 138.752z</Geometry>

    <Style x:Key="BaseStyle" TargetType="Control">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="{StaticResource TextFontSize}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    </Style>

    <Style x:Key="ButtonCustom" 
           BasedOn="{StaticResource BaseStyle}" 
           TargetType="Button">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!--BorderElement.CornerRadius는 Attached Property라서 TemplatedParent에 해당하는 Element에서 CornerRadius 속성을 선언하지 않아도
                    CornerRadius 속성을 가질 수 있게됨
                    TemplatedParent 는 TemplateBinding처럼 이 Template이 적용된 Control의 속성과 바인딩 하기 위해서 사용한다.
                    -->
                    
                    <Border x:Name="Chrome" 
                            CornerRadius="{Binding Path=(uicon:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" 
                            SnapsToDevicePixels="true" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9"/>
                            <Setter Property="Background" 
                                    TargetName="Chrome" Value="{Binding Path=(uicon:BackgroundSwitchElement.MouseHoverBackground),RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value=".6"/>
                            <Setter Property="Background" 
                                    TargetName="Chrome" Value="{Binding Path=(uicon:BackgroundSwitchElement.MouseDownBackground),RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="uniGrowl" TargetType="growl:Growl">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="MinHeight" Value="60"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Margin" Value="10,0,0,10"/>
        <Setter Property="MaxWidth" Value="320"/>
        <!--Attached Property 설정
        ControlTemplate 트리 안에 있는 Element에서 uicon:BorderElement.CornerRadius를 사용하면 
        여기서 설정한 값(8)을 가져온다-->
        <Setter Property="uicon:BorderElement.CornerRadius" Value="8"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="growl:Growl">
                    <Grid Name="PART_GridMain" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <!--현재 위치에서 MaxWidth 만큼 이동-->
                                <TranslateTransform X="{TemplateBinding MaxWidth}"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="42"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="{Binding Path=(uicon:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                Grid.ColumnSpan="3" Grid.RowSpan="2"
                                Effect="{StaticResource EffectShadow2}" 
                                Background="{TemplateBinding Background}"/>
                        <Image Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Width="20" Height="20" Stretch="Uniform">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IconType,RelativeSource={RelativeSource AncestorType=growl:Growl}}" Value="warning">
                                            <Setter Property="Source" Value="{StaticResource WarningImg}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IconType,RelativeSource={RelativeSource AncestorType=growl:Growl}}" Value="whitelist">
                                            <Setter Property="Source" Value="{StaticResource CheckImg}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>

                        <StackPanel VerticalAlignment="Center" Grid.Row="0" Grid.Column="1">
                            <TextBlock Text="{TemplateBinding Message}" Style="{StaticResource TextBlockDefault}" HorizontalAlignment="Left" TextWrapping="Wrap"
                                       FontFamily="{StaticResource SpoqaHansRegularFont}" FontSize="14" Foreground="Black" Opacity="0.87"/>
                            <TextBlock Visibility="{Binding ShowDescription, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}"
                                       Text="{TemplateBinding Description}" Style="{StaticResource TextBlockDefault}"
                                       FontFamily="{StaticResource SpoqaHansRegularFont}" FontSize="12" Foreground="Black" Opacity="0.38"
                                       HorizontalAlignment="Left" Margin="0,4,0,0"/>
                        </StackPanel>

                        <!--Close Button-->
                        <Button Grid.Row="0" 
                                Name="PART_ButtonClose"
                                Command="uicon:ControlCommands.Close" Style="{StaticResource ButtonCustom}" 
                                Visibility="Collapsed" Margin="11,0" 
                                Grid.Column="2" Background="Transparent" 
                                VerticalAlignment="Center" HorizontalAlignment="Center" Width="18" Height="18">
                            <Path Data="{StaticResource ErrorGeometry}" Stretch="Uniform" Fill="Tomato"/>
                        </Button>
                        
                        <UniformGrid Columns="2" Name="PART_PanelMore" IsEnabled="False" Visibility="Collapsed" Grid.Row="1" Grid.ColumnSpan="3" Height="28" Grid.Column="0">
                            <Button Command="uicon:ControlCommands.Cancel" 
                                    Style="{StaticResource ButtonCustom}" 
                                    HorizontalAlignment="Stretch" Background="Transparent">
                                <TextBlock Text="{Binding CancelStr,RelativeSource={RelativeSource TemplatedParent}}" 
                                           HorizontalAlignment="Center" Foreground="Orange"/>
                            </Button>
                            <Button Command="uicon:ControlCommands.Confirm" 
                                    Style="{StaticResource ButtonCustom}" 
                                    HorizontalAlignment="Stretch" Background="Transparent">
                                <TextBlock Text="{Binding ConfirmStr,RelativeSource={RelativeSource TemplatedParent}}" 
                                           HorizontalAlignment="Center" Foreground="Green"/>
                            </Button>
                        </UniformGrid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>